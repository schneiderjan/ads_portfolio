<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0820.1222                                -->
  <repository-location id='catsvsdogs_1' path='/workbooks' revision='1.4' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='States (catsvdogs)' inline='true' name='excel-direct.42376.769577256942' version='9.0'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:\Code\GitHub\ads_portfolio\dv\week5\catsvdogs.xlsx' password='' server='' username='' validate='no'>
        <relation name='States$' table='[States$]' type='table'>
          <columns header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Number of Households (in 1000)' ordinal='1' />
            <column datatype='real' name='Percentage of households with pets' ordinal='2' />
            <column datatype='integer' name='Number of Pet Households (in 1000)' ordinal='3' />
            <column datatype='real' name='Percentage of Dog Owners' ordinal='4' />
            <column datatype='integer' name='Dog Owning Households (1000s)' ordinal='5' />
            <column datatype='real' name='Mean Number of Dogs per household' ordinal='6' />
            <column datatype='integer' name='Dog Population (in 1000)' ordinal='7' />
            <column datatype='real' name='Percentage of Cat Owners' ordinal='8' />
            <column datatype='integer' name='Cat Owning Households' ordinal='9' />
            <column datatype='real' name='Mean Number of Cats' ordinal='10' />
            <column datatype='integer' name='Cat Population' ordinal='11' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Households (in 1000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Households (in 1000)]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Number of Households (in 1000)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of households with pets</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of households with pets]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Percentage of households with pets</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Pet Households (in 1000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Pet Households (in 1000)]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Number of Pet Households (in 1000)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of Dog Owners</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of Dog Owners]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Percentage of Dog Owners</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dog Owning Households (1000s)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dog Owning Households (1000s)]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Dog Owning Households (1000s)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Number of Dogs per household</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Number of Dogs per household]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Mean Number of Dogs per household</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dog Population (in 1000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dog Population (in 1000)]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Dog Population (in 1000)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of Cat Owners</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of Cat Owners]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Percentage of Cat Owners</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cat Owning Households</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cat Owning Households]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Cat Owning Households</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Number of Cats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Number of Cats]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Mean Number of Cats</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cat Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cat Population]</local-name>
            <parent-name>[States$]</parent-name>
            <remote-alias>Cat Population</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[States$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[excel-direct.42376.769577256942].[sum:Calculation_0510107190937800:qk]&quot;' value='Cats' />
          <alias key='&quot;[excel-direct.42376.769577256942].[sum:Calculation_5380107191747659:qk]&quot;' value='Dogs' />
          <alias key='&quot;[excel-direct.42376.769577256942].[sum:Cat Owning Households:qk]&quot;' value='Cat Owning Households (in 1000)' />
          <alias key='&quot;[excel-direct.42376.769577256942].[sum:Cat Population:qk]&quot;' value='Cat Population (in 1000)' />
          <alias key='&quot;[excel-direct.42376.769577256942].[sum:Dog Owning Households (1000s):qk]&quot;' value='Dog Owning Households (1000)' />
        </aliases>
      </column>
      <column caption='AVG Nr. of Cats per Households' datatype='real' name='[Calculation_0510107190937800]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Cat Population]/[Cat Owning Households]' />
      </column>
      <column caption='Percentage Dogs vs. Cats' datatype='real' name='[Calculation_1680107184408332]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Percentage of Dog Owners]-[Percentage of Cat Owners]' />
      </column>
      <column caption='AVG Nr. of Dogs per Households' datatype='real' name='[Calculation_5380107191747659]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Dog Population (in 1000)]/[Dog Owning Households (1000s)]' />
      </column>
      <column caption='Rank of Cat Households' datatype='integer' name='[Calculation_6300107194031739]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Calculation_0510107190937800]),&apos;desc&apos; )'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank of Dog Households' datatype='integer' name='[Calculation_6410107194417409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Percentage of Dog Owners]),&apos;desc&apos; )'>
          <table-calc ordering-field='[excel-direct.42376.769577256942].[Location]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' name='[Cat Owning Households]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Cat Population]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Dog Owning Households (1000s)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Dog Population (in 1000)]' role='measure' type='quantitative'>
      </column>
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='real' name='[Mean Number of Dogs per household]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Percentage of Dog Owners]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Calculation_0510107190937800]' derivation='Avg' name='[avg:Calculation_0510107190937800:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_0510107190937800]' derivation='Sum' name='[sum:Calculation_0510107190937800:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5380107191747659]' derivation='Sum' name='[sum:Calculation_5380107191747659:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cat Owning Households]' derivation='Sum' name='[sum:Cat Owning Households:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cat Population]' derivation='Sum' name='[sum:Cat Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dog Owning Households (1000s)]' derivation='Sum' name='[sum:Dog Owning Households (1000s):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dog Population (in 1000)]' derivation='Sum' name='[sum:Dog Population (in 1000):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Number of Dogs per household]' derivation='Sum' name='[sum:Mean Number of Dogs per household:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percentage of Dog Owners]' derivation='Sum' name='[sum:Percentage of Dog Owners:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6300107194031739]' derivation='User' name='[usr:Calculation_6300107194031739:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[excel-direct.42376.769577256942].[Location]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_6300107194031739]' derivation='User' name='[usr:Calculation_6300107194031739:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_6410107194417409]' derivation='User' name='[usr:Calculation_6410107194417409:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[excel-direct.42376.769577256942].[Location]' ordering-type='Field' />
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:\Code\GitHub\ads_portfolio\dv\week5\States (catsvdogs).tde' schema='Extract' tablename='Extract' update-time='01/11/2016 07:00:03 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_0510107190937800]' formula='[Cat Population]/[Cat Owning Households]' />
            <calculation column='[Calculation_1680107184408332]' formula='[Percentage of Dog Owners]-[Percentage of Cat Owners]' />
            <calculation column='[Calculation_5380107191747659]' formula='[Dog Population (in 1000)]/[Dog Owning Households (1000s)]' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='49' timestamp-start='2016-01-11 19:00:03.179' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_0510107190937800</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_0510107190937800]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_0510107190937800</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.654867256637168</statistic>
                <statistic aggregation='Max' datatype='real'>2.6000000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1680107184408332</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_1680107184408332]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1680107184408332</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-11.799999999999997</statistic>
                <statistic aggregation='Max' datatype='real'>17.299999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_5380107191747659</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_5380107191747659]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_5380107191747659</remote-alias>
              <ordinal>2</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.1052631578947369</statistic>
                <statistic aggregation='Max' datatype='real'>2.0799373040752349</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cat Owning Households</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Cat Owning Households]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cat Owning Households</remote-alias>
              <ordinal>3</ordinal>
              <family>States$</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>33</statistic>
                <statistic aggregation='Max' datatype='integer'>3687</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cat Population</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Cat Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cat Population</remote-alias>
              <ordinal>4</ordinal>
              <family>States$</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>63</statistic>
                <statistic aggregation='Max' datatype='integer'>7118</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dog Owning Households (1000s)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Dog Owning Households (1000s)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dog Owning Households (1000s)</remote-alias>
              <ordinal>5</ordinal>
              <family>States$</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>38</statistic>
                <statistic aggregation='Max' datatype='integer'>4260</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dog Population (in 1000)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Dog Population (in 1000)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dog Population (in 1000)</remote-alias>
              <ordinal>6</ordinal>
              <family>States$</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>42</statistic>
                <statistic aggregation='Max' datatype='integer'>7163</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>7</ordinal>
              <family>States$</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LDE_RDE' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;de&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mean Number of Cats</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mean Number of Cats]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mean Number of Cats</remote-alias>
              <ordinal>8</ordinal>
              <family>States$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.7</statistic>
                <statistic aggregation='Max' datatype='real'>2.6000000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mean Number of Dogs per household</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mean Number of Dogs per household]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mean Number of Dogs per household</remote-alias>
              <ordinal>9</ordinal>
              <family>States$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.1000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>2.1000000000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Households (in 1000)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Number of Households (in 1000)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Households (in 1000)</remote-alias>
              <ordinal>10</ordinal>
              <family>States$</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>221</statistic>
                <statistic aggregation='Max' datatype='integer'>12974</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Pet Households (in 1000)</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Number of Pet Households (in 1000)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Pet Households (in 1000)</remote-alias>
              <ordinal>11</ordinal>
              <family>States$</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>63</statistic>
                <statistic aggregation='Max' datatype='integer'>6865</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentage of Cat Owners</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percentage of Cat Owners]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentage of Cat Owners</remote-alias>
              <ordinal>13</ordinal>
              <family>States$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>11.6</statistic>
                <statistic aggregation='Max' datatype='real'>49.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentage of Dog Owners</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percentage of Dog Owners]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentage of Dog Owners</remote-alias>
              <ordinal>14</ordinal>
              <family>States$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>13.1</statistic>
                <statistic aggregation='Max' datatype='real'>47.899999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentage of households with pets</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percentage of households with pets]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentage of households with pets</remote-alias>
              <ordinal>15</ordinal>
              <family>States$</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>21.899999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>70.799999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.329897' measure-ordering='alphabetic' measure-percentage='0.621993' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Calculation_5380107191747659:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Dog Owning Households (1000s):qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.42376.769577256942].[usr:Calculation_6300107194031739:qk:5]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel-direct.42376.769577256942].[usr:Calculation_6300107194031739:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Cat Population:qk]:1&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Cat Population:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Dog Population (in 1000):qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Mean Number of Dogs per household:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Percentage of Dog Owners:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.42376.769577256942].[avg:Calculation_0510107190937800:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Calculation_0510107190937800:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Cat Owning Households:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[excel-direct.42376.769577256942]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel-direct.42376.769577256942].[usr:Calculation_6410107194417409:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Cat and Dog Population' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Cat and Dog Population' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average number of cats and dogs per household'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average number of cats and dogs per household</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='States (catsvdogs)' name='excel-direct.42376.769577256942' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42376.769577256942'>
            <column caption='AVG Nr. of Cats per Households' datatype='real' name='[Calculation_0510107190937800]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Cat Population]/[Cat Owning Households]' />
            </column>
            <column caption='AVG Nr. of Dogs per Households' datatype='real' name='[Calculation_5380107191747659]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Dog Population (in 1000)]/[Dog Owning Households (1000s)]' />
            </column>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0510107190937800]' derivation='Sum' name='[sum:Calculation_0510107190937800:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5380107191747659]' derivation='Sum' name='[sum:Calculation_5380107191747659:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42376.769577256942].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42376.769577256942].[sum:Calculation_0510107190937800:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42376.769577256942].[sum:Calculation_5380107191747659:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.42376.769577256942].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Calculation_0510107190937800:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Calculation_5380107191747659:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel-direct.42376.769577256942].[none:Location:nk]'>
            <groupfilter function='level-members' level='[none:Location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[excel-direct.42376.769577256942].[none:Location:nk]' direction='ASC' />
          <slices>
            <column>[excel-direct.42376.769577256942].[:Measure Names]</column>
            <column>[excel-direct.42376.769577256942].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.42376.769577256942].[Multiple Values]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' minor-origin='0.0' minor-spacing='0.5' scope='rows' type='space' />
            <format attr='title' class='0' field='[excel-direct.42376.769577256942].[Multiple Values]' scope='rows' value='AVG Nr. of Cats/Dogs per Households' />
            <format attr='subtitle' class='0' field='[excel-direct.42376.769577256942].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.42376.769577256942].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[excel-direct.42376.769577256942].[:Measure Names]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42376.769577256942].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42376.769577256942].[Multiple Values]</rows>
        <cols>([excel-direct.42376.769577256942].[none:Location:nk] / [excel-direct.42376.769577256942].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Cat Households and respective Population'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cat Households and respective Population&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='States (catsvdogs)' name='excel-direct.42376.769577256942' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42376.769577256942'>
            <column datatype='integer' name='[Cat Owning Households]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Cat Population]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cat Owning Households]' derivation='Sum' name='[sum:Cat Owning Households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cat Population]' derivation='Sum' name='[sum:Cat Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[excel-direct.42376.769577256942].[none:Location:nk]' direction='DESC' using='[excel-direct.42376.769577256942].[sum:Cat Owning Households:qk]'>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[excel-direct.42376.769577256942].[sum:Cat Owning Households:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.42376.769577256942].[sum:Cat Owning Households:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[excel-direct.42376.769577256942].[sum:Cat Population:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='render-fold-reversed' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel-direct.42376.769577256942].[none:Location:nk]' />
              <color column='[excel-direct.42376.769577256942].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.42376.769577256942].[sum:Cat Owning Households:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[excel-direct.42376.769577256942].[sum:Cat Owning Households:qk]' />
              <lod column='[excel-direct.42376.769577256942].[none:Location:nk]' />
              <color column='[excel-direct.42376.769577256942].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[excel-direct.42376.769577256942].[sum:Cat Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <lod column='[excel-direct.42376.769577256942].[none:Location:nk]' />
              <color column='[excel-direct.42376.769577256942].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42376.769577256942].[none:Location:nk]</rows>
        <cols>([excel-direct.42376.769577256942].[sum:Cat Owning Households:qk] + [excel-direct.42376.769577256942].[sum:Cat Population:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Cats vs Dogs Households by Percent'>
      <layout-options>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='States (catsvdogs)' name='excel-direct.42376.769577256942' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42376.769577256942'>
            <column caption='Percentage Dogs vs. Cats' datatype='real' name='[Calculation_1680107184408332]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Percentage of Dog Owners]-[Percentage of Cat Owners]' />
            </column>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column datatype='real' name='[Percentage of Cat Owners]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Percentage of Dog Owners]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1680107184408332]' derivation='Sum' name='[sum:Calculation_1680107184408332:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentage of Cat Owners]' derivation='Sum' name='[sum:Percentage of Cat Owners:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentage of Dog Owners]' derivation='Sum' name='[sum:Percentage of Dog Owners:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42376.769577256942].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='%null%' />
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:Location:nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.42376.769577256942].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.42376.769577256942].[Longitude (generated)]' field-type='quantitative' max='-6624035.8437444726' min='-14715353.909900092' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.42376.769577256942].[Latitude (generated)]' field-type='quantitative' max='8284079.2586587695' min='877636.96593833063' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.42376.769577256942].[sum:Calculation_1680107184408332:qk]' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.42376.769577256942].[none:Location:nk]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42376.769577256942].[none:Location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42376.769577256942].[none:Location:nk]' value='false' />
            <format attr='omit-on-special' field='[excel-direct.42376.769577256942].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42376.769577256942].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42376.769577256942].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[excel-direct.42376.769577256942].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42376.769577256942].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42376.769577256942].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[excel-direct.42376.769577256942].[sum:Calculation_1680107184408332:qk]' value='Cats (Red) &amp; Dogs (Blue)  in %'>
              <formatted-text>
                <run>Cats (Red) &amp; Dogs (Blue)  in %</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[excel-direct.42376.769577256942].[sum:Calculation_1680107184408332:qk]' />
              <lod column='[excel-direct.42376.769577256942].[none:Location:nk]' />
              <tooltip column='[excel-direct.42376.769577256942].[sum:Percentage of Cat Owners:qk]' />
              <tooltip column='[excel-direct.42376.769577256942].[sum:Percentage of Dog Owners:qk]' />
              <geometry column='[excel-direct.42376.769577256942].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42376.769577256942].[Latitude (generated)]</rows>
        <cols>[excel-direct.42376.769577256942].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Distribution of Cats and Dogs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Distribution of Cats and Dogs</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='States (catsvdogs)' name='excel-direct.42376.769577256942' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42376.769577256942'>
            <column datatype='integer' name='[Cat Population]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Dog Population (in 1000)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Cat Population]' derivation='Sum' name='[sum:Cat Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dog Population (in 1000)]' derivation='Sum' name='[sum:Dog Population (in 1000):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42376.769577256942].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42376.769577256942].[sum:Cat Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42376.769577256942].[sum:Dog Population (in 1000):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.42376.769577256942].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.42376.769577256942].[Multiple Values]' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.42376.769577256942].[Multiple Values]' />
              <wedge-size column='[excel-direct.42376.769577256942].[sum:Cat Population:qk]' />
              <lod column='[excel-direct.42376.769577256942].[:Measure Names]' />
              <tooltip column='[excel-direct.42376.769577256942].[sum:Cat Population:qk]' />
              <tooltip column='[excel-direct.42376.769577256942].[sum:Dog Population (in 1000):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='206' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Dog Households and Population'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dog Households and respective Population&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='States (catsvdogs)' name='excel-direct.42376.769577256942' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42376.769577256942'>
            <column datatype='integer' name='[Dog Owning Households (1000s)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Dog Population (in 1000)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dog Owning Households (1000s)]' derivation='Sum' name='[sum:Dog Owning Households (1000s):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dog Population (in 1000)]' derivation='Sum' name='[sum:Dog Population (in 1000):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42376.769577256942].[none:Location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Location:nk]' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.42376.769577256942].[none:Location:nk]' direction='DESC' using='[excel-direct.42376.769577256942].[sum:Dog Owning Households (1000s):qk]'>
          </sort>
          <slices>
            <column>[excel-direct.42376.769577256942].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.42376.769577256942].[sum:Dog Population (in 1000):qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='render-fold-reversed' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.42376.769577256942].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.42376.769577256942].[sum:Dog Owning Households (1000s):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.42376.769577256942].[:Measure Names]' />
              <text column='[excel-direct.42376.769577256942].[sum:Dog Owning Households (1000s):qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0'>&lt;</run>
                <run fontalignment='0'>[excel-direct.42376.769577256942].[sum:Dog Owning Households (1000s):qk]</run>
                <run fontalignment='0'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='off' />
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='206' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[excel-direct.42376.769577256942].[sum:Dog Population (in 1000):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[excel-direct.42376.769577256942].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='155' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42376.769577256942].[none:Location:nk]</rows>
        <cols>([excel-direct.42376.769577256942].[sum:Dog Owning Households (1000s):qk] + [excel-direct.42376.769577256942].[sum:Dog Population (in 1000):qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Rank of Households Cats vs Dogs'>
      <table>
        <view>
          <datasources>
            <datasource caption='States (catsvdogs)' name='excel-direct.42376.769577256942' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42376.769577256942'>
            <column caption='Rank of Cat Households' datatype='integer' name='[Calculation_6300107194031739]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Calculation_0510107190937800]),&apos;desc&apos; )'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank of Dog Households' datatype='integer' name='[Calculation_6410107194417409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Percentage of Dog Owners]),&apos;desc&apos; )'>
                <table-calc ordering-field='[excel-direct.42376.769577256942].[Location]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column datatype='real' name='[Percentage of Cat Owners]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Percentage of Dog Owners]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percentage of Cat Owners]' derivation='Sum' name='[sum:Percentage of Cat Owners:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentage of Dog Owners]' derivation='Sum' name='[sum:Percentage of Dog Owners:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6300107194031739]' derivation='User' name='[usr:Calculation_6300107194031739:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.42376.769577256942].[none:Location:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_6410107194417409]' derivation='User' name='[usr:Calculation_6410107194417409:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.42376.769577256942].[Location]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42376.769577256942].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42376.769577256942].[usr:Calculation_6300107194031739:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42376.769577256942].[usr:Calculation_6410107194417409:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42376.769577256942].[sum:Percentage of Dog Owners:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42376.769577256942].[sum:Percentage of Cat Owners:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.42376.769577256942].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel-direct.42376.769577256942].[usr:Calculation_6300107194031739:qk:1]&quot;</bucket>
              <bucket>&quot;[excel-direct.42376.769577256942].[usr:Calculation_6410107194417409:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42376.769577256942].[sum:Percentage of Dog Owners:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[excel-direct.42376.769577256942].[none:Location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel-direct.42376.769577256942].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[excel-direct.42376.769577256942].[usr:Calculation_6300107194031739:qk:1]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[excel-direct.42376.769577256942].[usr:Calculation_6410107194417409:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.42376.769577256942].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42376.769577256942].[none:Location:nk]</rows>
        <cols>[excel-direct.42376.769577256942].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Cat and Dog Popuation'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='8' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='99500' id='9' type='layout-basic' w='100000' x='0' y='0'>
            </zone>
          </zone>
        </zone>
        <zone h='36625' id='1' name='Dog Households and Population' show-title='true' w='45000' x='52500' y='3125'>
        </zone>
        <zone h='36625' id='7' name='Cat Households and respective Population' show-title='true' w='47500' x='2500' y='3125'>
        </zone>
        <zone h='6875' id='12' name='Cat Households and respective Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' w='20000' x='2500' y='40625'>
        </zone>
        <zone h='6875' id='13' name='Dog Households and Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' w='18800' x='52900' y='41000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Cat and Dog Population'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='84000' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
                <zone h='50000' id='1' name='Cat Households and respective Population' show-title='true' w='84000' x='0' y='50000'>
                </zone>
                <zone h='50000' id='7' name='Dog Households and Population' show-title='true' w='84000' x='0' y='0'>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='12' is-fixed='true' type='layout-basic' w='16000' x='84000' y='0'>
              <zone h='50000' id='8' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
                <zone fixed-size='345' h='44625' id='11' is-fixed='true' name='Dog Households and Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' w='16000' x='84000' y='0'>
                </zone>
              </zone>
              <zone h='50000' id='13' param='vert' type='layout-flow' w='16000' x='84000' y='50000'>
                <zone h='7875' id='10' name='Cat Households and respective Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' w='16000' x='84000' y='50000'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='84000' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
                <zone h='50000' id='1' name='Cat Households and respective Population' show-title='true' w='84000' x='0' y='50000'>
                </zone>
                <zone h='50000' id='7' name='Dog Households and Population' show-title='true' w='84000' x='0' y='0'>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='12' is-fixed='true' type='layout-basic' w='16000' x='84000' y='0'>
              <zone h='50000' id='8' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
                <zone fixed-size='345' h='44625' id='11' is-fixed='true' name='Dog Households and Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' w='16000' x='84000' y='0'>
                </zone>
              </zone>
              <zone h='50000' id='13' param='vert' type='layout-flow' w='16000' x='84000' y='50000'>
                <zone h='7875' id='10' name='Cat Households and respective Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' w='16000' x='84000' y='50000'>
                </zone>
                <zone h='7250' id='15' name='Distribution of Cats and Dogs' pane-specification-id='4' param='[excel-direct.42376.769577256942].[Multiple Values]' type='color' w='16000' x='84000' y='57875'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='25375' id='14' name='Distribution of Cats and Dogs' show-title='true' w='21400' x='82600' y='20125'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Distribution and Map'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='States (catsvdogs)' name='excel-direct.42376.769577256942' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.42376.769577256942'>
        <column datatype='string' name='[Location]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        </column>
        <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Cats vs Dogs Households by Percent' show-title='true' w='84000' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='6625' id='6' mode='checkdropdown' name='Cats vs Dogs Households by Percent' param='[excel-direct.42376.769577256942].[none:Location:nk]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='7250' id='7' name='Cats vs Dogs Households by Percent' pane-specification-id='0' param='[excel-direct.42376.769577256942].[sum:Calculation_1680107184408332:qk]' type='color' w='16000' x='84000' y='6625'>
              </zone>
              <zone h='7250' id='9' name='Distribution of Cats and Dogs' pane-specification-id='4' param='[excel-direct.42376.769577256942].[Multiple Values]' type='color' w='16000' x='84000' y='13875'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='35625' id='8' name='Distribution of Cats and Dogs' show-caption='true' show-title='true' w='26900' x='1700' y='61500'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='FINAL PUBLISCH' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#de5151'>Cats</run>
            <run fontalignment='1'> or </run>
            <run bold='true' fontalignment='1' fontcolor='#4a91c2'>Dogs</run>
            <run fontalignment='1'>? Which pet is more popular?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' hidden='true' id='7' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' hidden='true' id='6' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95124' hidden='true' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='4461'>
              <zone h='11307' hidden='true' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461'>
              </zone>
              <zone h='83817' hidden='true' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
                <flipboard active-id='3' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='The dogs are dominating the country...' captured-sheet='Cats vs Dogs Households by Percent' id='3'>
                    </story-point>
                    <story-point caption='...but the cats are ruling the household!' captured-sheet='Average number of cats and dogs per household' id='6'>
                      <capturedDeltas>
                        <worksheet name='Average number of cats and dogs per household'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[excel-direct.42376.769577256942].[Multiple Values]' field-type='quantitative' major-origin='0.0' major-spacing='0.5' minor-origin='0.0' minor-spacing='0.10000000000000001' scope='rows' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#de5151'>Cats</run>
            <run> or </run>
            <run bold='true' fontcolor='#4a91c2'>Dogs</run>
            <run>? Which pet is more popular?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' hidden='true' id='7' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' hidden='true' id='6' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95124' hidden='true' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='4461'>
              <zone h='11307' hidden='true' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461'>
              </zone>
              <zone h='83817' hidden='true' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
                <flipboard active-id='9' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Population of both is even.' captured-sheet='Dashboard 3' id='9'>
                    </story-point>
                    <story-point caption='The dogs are dominating the country...' captured-sheet='Cats vs Dogs Households by Percent' id='3'>
                    </story-point>
                    <story-point caption='...but there are more cats per household!' captured-sheet='Average number of cats and dogs per household' id='6'>
                      <capturedDeltas>
                        <worksheet name='Average number of cats and dogs per household'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[excel-direct.42376.769577256942].[Multiple Values]' field-type='quantitative' major-origin='0.0' major-spacing='0.5' minor-origin='0.0' minor-spacing='0.10000000000000001' scope='rows' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='How do the pets rate?' captured-sheet='Rank of Households Cats vs Dogs' id='7'>
                    </story-point>
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Story Title</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' hidden='true' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' hidden='true' id='3' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='11307' hidden='true' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461'>
            </zone>
            <zone h='83817' hidden='true' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
              <flipboard active-id='2' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Distribution and Map' id='1'>
                  </story-point>
                  <story-point captured-sheet='Dashboard 3' id='2'>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='28' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Story 1'>
      <active id='5' />
      <zones>
        <zone h='4461' hidden='true' id='6' name='' type='title' w='100000' x='0' y='0' />
        <zone h='11307' hidden='true' id='4' name='' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
        <zone h='83817' hidden='true' id='5' name='' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='FINAL PUBLISCH'>
      <zones>
        <zone h='4461' hidden='true' id='6' name='' type='title' w='100000' x='0' y='0' />
        <zone h='11307' hidden='true' id='4' name='' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
        <zone h='83817' hidden='true' id='5' name='' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Cats vs Dogs Households by Percent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42376.769577256942].[sum:Calculation_1680107184408332:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42376.769577256942].[none:Location:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42376.769577256942].[sum:Calculation_1680107184408332:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Distribution of Cats and Dogs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[excel-direct.42376.769577256942].[Multiple Values]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42376.769577256942].[Multiple Values]</field>
          <field>[excel-direct.42376.769577256942].[none:Location:nk]</field>
          <field>[excel-direct.42376.769577256942].[usr:Calculation_6300107194031739:qk:1]</field>
          <field>[excel-direct.42376.769577256942].[usr:Calculation_6300107194031739:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Average number of cats and dogs per household'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='47'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42376.769577256942].[none:Location:nk]' type='filter' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42376.769577256942].[none:Location:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Cat Households and respective Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42376.769577256942].[:Measure Names]</field>
          <field>[excel-direct.42376.769577256942].[none:Location:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dog Households and Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42376.769577256942].[none:Location:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Rank of Households Cats vs Dogs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42376.769577256942].[none:Location:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Cat and Dog Population'>
      <zones>
        <zone name='Dog Households and Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' />
        <zone name='Cat Households and respective Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 3'>
      <zones>
        <zone name='Dog Households and Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' />
        <zone name='Cat Households and respective Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' />
        <zone name='Distribution of Cats and Dogs' pane-specification-id='4' param='[excel-direct.42376.769577256942].[Multiple Values]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Distribution and Map'>
      <active id='1' />
      <zones>
        <zone name='Cats vs Dogs Households by Percent'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='checkdropdown' name='Cats vs Dogs Households by Percent' param='[excel-direct.42376.769577256942].[none:Location:nk]' type='filter' />
        <zone name='Cats vs Dogs Households by Percent' pane-specification-id='0' param='[excel-direct.42376.769577256942].[sum:Calculation_1680107184408332:qk]' type='color' />
        <zone name='Distribution of Cats and Dogs' pane-specification-id='4' param='[excel-direct.42376.769577256942].[Multiple Values]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Story 2'>
      <zones>
        <zone h='4461' hidden='true' id='3' name='' type='title' w='100000' x='0' y='0' />
        <zone h='11307' hidden='true' id='4' name='' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
        <zone h='83817' hidden='true' id='5' name='' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Cat and Dog Popuation'>
      <zones>
        <zone name='Cat Households and respective Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' />
        <zone name='Dog Households and Population' pane-specification-id='1' param='[excel-direct.42376.769577256942].[:Measure Names]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      yWzm/uhfgBjQXVjsTkKIVeAJIc3N1+c3ZrOZENK3bRshRLBsyj/BWQ9/9K8gBIMBIRAMCIE8
      vJ8DoU0Bz0AIBANCIBgQAsGAEAgGhEAwIASCASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASC
      ASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASCASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASC
      ASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASCASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASC
      ASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASCASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASC
      ASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASCASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASC
      ASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASCASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASC
      ASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASCASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASC
      ASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASCASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASC
      ASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASCASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASC
      ASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIASCASEQDAiBYEAIBANCIBgQAsGAEAgGhEAwIATy
      /86tDDxuBKjgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='FINAL PUBLISCH' width='192'>
      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
      KeVi9f0/luKx8tWPdu4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Cats vs Dogs Households by Percent' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Distribution of Cats and Dogs' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average number of cats and dogs per household' width='192'>
      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
      NAdsN/8PHqhvnSz5vdsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Cat Households and respective Population' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dog Households and Population' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rank of Households Cats vs Dogs' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cat and Dog Population' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Distribution and Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9V7AlyXUgdk5m2Wvffb5f+57pmYGZgbckiOECJEG7S2iplRZLMsSN2AhF
      6FNaRUgfUkgRG6HQhz6lNbHiLpcrUSuKywVoQMERwBDgwIw3Pd3T3jxvriubefRxqvLmrbr3
      dQPTA4SCyI/u+6qyMk9mnjw+TyIRwU/KT8oPW8SPG4CflP9/l58g0E/KWyoFAu1t3vh//vCP
      9ocJAJDKDo4G8z545fvf+vef/9NBlM18++KLL4727125vT3v8+e++bXDdPLnN7/5DADceuO5
      y3cP+cnLf/1NuwIAfOebX/rCn38pye/Dag8ODo6v8JPydhSH//uzL371s3/3s0l89Pt/9Gen
      N1a/8uy1n/rA6e7axQ+/54m//Mu/bHlir99vLZ/9+Afe/eprVz/9K09/4Y8/j2rcPXEu3b0+
      gE6LDt718V+8eHr1a3/x+e+32ysX3//s1/5i5cxFSAcLjjvAxAnXsH/79l7cpOF3L//uxz72
      8Re/++zKmYuHW/e+/1df+dZfP9s7+Y5Lyyu/8rc+vrd1+9k/+P0nLpwJl04dbt392U/+1Gtv
      vNmQ8My32zt3rj5+8eIz33n+g+955+UrV9/95FOXXn/1iccu/tV3X1g/ee76i9/45K9+7v3v
      evTHO6F/00pBgSSo11577bnv/PULL7xwOM5WTqyuLvZefuU1AFhrwKtb0bn15ZdffhUAQGev
      vPiSoCSWnXu3brz5xivg+Aud5uuX3gSAxRPnfvnTP93fvqXDpTs3rl2/cum5515aWll66eVX
      vvG1L12/cWOc4C/+3Ce++9ff4gpa69feuHrm5Priysqll17OAQDwkfMbm3347p/8Xmv9AoP3
      /qd/RW9feuHl1w/2d1fOvXtw7+a5J5648drzz7306sH+XnvtETXaW9s4vbq08OOYw7/RBVkL
      y+LRlWu3Tp8+ubm13V1YGuxtB62GcJvrKz3Q2XCsktFeAsHG2tL2vVv9GB45f/rujathb/1P
      /u3/eqXv/8O/+wud1VMLrXBra6vXaQwzMdq71145mfZ3D4dZrxcmyml7dG9/tNppNLudQZRH
      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
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      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
      KjQAsxkmygAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cat and Dog Popuation' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
